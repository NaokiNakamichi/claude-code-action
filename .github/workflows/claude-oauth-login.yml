name: Claude OAuth Login

on:
  workflow_dispatch:
    inputs:
      authorization_code:
        description: 'Authorization code from Claude OAuth (leave empty to generate URL)'
        required: false
        type: string

jobs:
  oauth-login:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Restore OAuth state from cache
        if: inputs.authorization_code != ''
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: claude_oauth_state.json
          key: claude-oauth-state-${{ github.run_id }}
          restore-keys: |
            claude-oauth-state-
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          
      - name: Generate OAuth URL or Process Code
        run: |
          if [ -z "${{ inputs.authorization_code }}" ]; then
            # No code provided, generate URL
            chmod +x .github/scripts/claude_oauth_login.rb
            oauth_url=$(.github/scripts/claude_oauth_login.rb)
            
            echo "## üîê Claude OAuth Login Instructions" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Step 1: Complete OAuth Authorization" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "1. Click this link to authenticate: [$oauth_url]($oauth_url)" >> $GITHUB_STEP_SUMMARY
            echo "2. Log in to Anthropic and authorize the application" >> $GITHUB_STEP_SUMMARY
            echo "3. Copy the authorization code from the redirect page" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Step 2: Run Workflow Again" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "1. Go to the [Actions tab](${{ github.server_url }}/${{ github.repository }}/actions/workflows/claude-oauth-login-simple.yml)" >> $GITHUB_STEP_SUMMARY
            echo "2. Click 'Run workflow'" >> $GITHUB_STEP_SUMMARY
            echo "3. Paste the authorization code in the input field" >> $GITHUB_STEP_SUMMARY
            echo "4. Click 'Run workflow' to process the code" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚ö†Ô∏è **Important:** The authorization code expires in 10 minutes!" >> $GITHUB_STEP_SUMMARY
            
            # Also output to logs
            echo "=================================================="
            echo "No authorization code provided."
            echo "Please visit the following URL to authenticate:"
            echo "$oauth_url"
            echo ""
            echo "After authorization, run this workflow again with the code."
            echo "=================================================="
            
            # Verify state file was created
            if [ -f claude_oauth_state.json ]; then
              echo "OAuth state file created successfully"
            else
              echo "Error: OAuth state file was not created"
              exit 1
            fi
          else
            # Code provided, process it
            echo "## ‚úÖ Authorization Code Received" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Processing authorization code..." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Code:** \`${{ inputs.authorization_code }}\`" >> $GITHUB_STEP_SUMMARY
            echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
            
            # Check if OAuth state was restored
            if [ ! -f claude_oauth_state.json ]; then
              echo "‚ùå Error: OAuth state file not found in cache!" >> $GITHUB_STEP_SUMMARY
              echo "Please generate a new OAuth URL first by running this workflow without an authorization code." >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
            
            echo "Authorization code received, exchanging for tokens..."
            
            # Exchange code for tokens
            chmod +x .github/scripts/claude_oauth_exchange.rb
            .github/scripts/claude_oauth_exchange.rb "${{ inputs.authorization_code }}"
            
            if [ -f credentials.json ]; then
              echo "‚úÖ Credentials generated successfully!"
              
              # Cache the credentials for reuse in other workflows
              echo "Caching credentials for future use..."
              
              # Display summary
              echo "## ‚úÖ OAuth Login Complete!" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "The Claude OAuth credentials have been successfully generated and cached." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
              echo "- The credentials are securely stored in the GitHub Actions cache" >> $GITHUB_STEP_SUMMARY
              echo "- Use the cache key \`claude-credentials-${{ github.sha }}\` in other workflows" >> $GITHUB_STEP_SUMMARY
              echo "- Cache is only accessible to workflows in this repository" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ùå Failed to generate credentials"
              exit 1
            fi
          fi
      
      - name: Save OAuth state to cache
        if: inputs.authorization_code == ''
        uses: actions/cache/save@v3
        with:
          path: claude_oauth_state.json
          key: claude-oauth-state-${{ github.run_id }}
          
      - name: Save credentials to cache
        if: inputs.authorization_code != '' && success()
        uses: actions/cache/save@v3
        with:
          path: credentials.json
          key: claude-credentials-${{ github.sha }}